# frozen_string_literal: true

module MesscadaApp
  class PalletContract < Dry::Validation::Contract
    params do
      optional(:id).filled(:integer)
      optional(:pallet_number).filled(Types::StrippedString)
      optional(:exit_ref).maybe(Types::StrippedString)
      optional(:scrapped_at).maybe(:time)
      required(:location_id).filled(:integer)
      optional(:shipped).maybe(:bool)
      optional(:in_stock).maybe(:bool)
      optional(:inspected).maybe(:bool)
      optional(:shipped_at).maybe(:time)
      optional(:govt_first_inspection_at).maybe(:time)
      optional(:govt_reinspection_at).maybe(:time)
      optional(:stock_created_at).maybe(:time)
      required(:phc).filled(Types::StrippedString)
      optional(:intake_created_at).maybe(:time)
      optional(:first_cold_storage_at).maybe(:time)
      optional(:build_status).maybe(Types::StrippedString)
      optional(:gross_weight).maybe(:decimal)
      optional(:gross_weight_measured_at).maybe(:time)
      optional(:palletized).maybe(:bool)
      optional(:partially_palletized).maybe(:bool)
      optional(:palletized_at).maybe(:time)
      optional(:partially_palletized_at).maybe(:time)
      required(:fruit_sticker_pm_product_id).maybe(:integer)
      optional(:fruit_sticker_pm_product_2_id).maybe(:integer)
      optional(:allocated).maybe(:bool)
      optional(:allocated_at).maybe(:time)
      optional(:reinspected).maybe(:bool)
      optional(:scrapped).maybe(:bool)
      required(:pallet_format_id).filled(:integer)
      optional(:carton_quantity).maybe(:integer)
      optional(:govt_inspection_passed).maybe(:bool)
      optional(:plt_packhouse_resource_id).maybe(:integer)
      optional(:plt_line_resource_id).maybe(:integer)
      optional(:nett_weight).maybe(:decimal)
      optional(:load_id).maybe(:integer)
      optional(:fruit_sticker_pm_product_2_id).maybe(:integer)
      optional(:last_govt_inspection_pallet_id).maybe(:integer)
      optional(:temp_tail).maybe(Types::StrippedString)
      optional(:depot_pallet).maybe(:bool)
      optional(:edi_in_transaction_id).maybe(:integer)
      optional(:edi_in_consignment_note_number).maybe(Types::StrippedString)
      optional(:edi_in_load_number).maybe(Types::StrippedString)
      optional(:re_calculate_nett).maybe(:bool)
      optional(:edi_in_inspection_point).maybe(Types::StrippedString)
      optional(:repacked).maybe(:bool)
      optional(:repacked_at).maybe(:time)
      optional(:palletizing_bay_resource_id).maybe(:integer)
      optional(:has_individual_cartons).maybe(:bool)
      optional(:nett_weight_externally_calculated).maybe(:bool)
      optional(:legacy_data).maybe(:hash)
      optional(:derived_weight).maybe(:bool)
      optional(:rmt_container_material_owner_id).maybe(:integer)
    end

    rule(:plt_packhouse_resource_id, :plt_line_resource_id) do
      base.failure 'must be a depot_pallet or provide plt_packhouse_resource_id and plt_line_resource_id' unless values[:depot_pallet] || (values[:plt_packhouse_resource_id] && values[:plt_line_resource_id])
    end
  end

  BinToPalletSchema = Dry::Schema.Params do
    optional(:id).filled(:integer)
    optional(:pallet_number).filled(Types::StrippedString)
    optional(:exit_ref).maybe(Types::StrippedString)
    optional(:scrapped_at).maybe(:time)
    required(:location_id).filled(:integer)
    optional(:shipped).maybe(:bool)
    optional(:in_stock).maybe(:bool)
    optional(:inspected).maybe(:bool)
    optional(:shipped_at).maybe(:time)
    optional(:govt_first_inspection_at).maybe(:time)
    optional(:govt_reinspection_at).maybe(:time)
    optional(:stock_created_at).maybe(:time)
    required(:phc).filled(Types::StrippedString)
    optional(:intake_created_at).maybe(:time)
    optional(:first_cold_storage_at).maybe(:time)
    optional(:build_status).maybe(Types::StrippedString)
    optional(:gross_weight).maybe(:decimal)
    optional(:gross_weight_measured_at).maybe(:time)
    optional(:palletized).maybe(:bool)
    optional(:partially_palletized).maybe(:bool)
    optional(:palletized_at).maybe(:time)
    optional(:partially_palletized_at).maybe(:time)
    optional(:fruit_sticker_pm_product_id).maybe(:integer)
    optional(:fruit_sticker_pm_product_2_id).maybe(:integer)
    optional(:allocated).maybe(:bool)
    optional(:allocated_at).maybe(:time)
    optional(:reinspected).maybe(:bool)
    optional(:scrapped).maybe(:bool)
    required(:pallet_format_id).filled(:integer)
    optional(:carton_quantity).maybe(:integer)
    optional(:govt_inspection_passed).maybe(:bool)
    required(:plt_packhouse_resource_id).maybe(:integer)
    required(:plt_line_resource_id).maybe(:integer)
    optional(:nett_weight).maybe(:decimal)
    optional(:load_id).maybe(:integer)
    optional(:fruit_sticker_pm_product_2_id).maybe(:integer)
    optional(:last_govt_inspection_pallet_id).maybe(:integer)
    optional(:temp_tail).maybe(Types::StrippedString)
    optional(:depot_pallet).maybe(:bool)
    optional(:edi_in_transaction_id).maybe(:integer)
    optional(:edi_in_consignment_note_number).maybe(Types::StrippedString)
    optional(:edi_in_load_number).maybe(Types::StrippedString)
    optional(:re_calculate_nett).maybe(:bool)
    optional(:edi_in_inspection_point).maybe(Types::StrippedString)
    optional(:repacked).maybe(:bool)
    optional(:repacked_at).maybe(:time)
    optional(:palletizing_bay_resource_id).maybe(:integer)
    optional(:has_individual_cartons).maybe(:bool)
    optional(:nett_weight_externally_calculated).maybe(:bool)
    optional(:rmt_container_material_owner_id).maybe(:integer)
  end
end
