<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <%= csrf_metatag %>

    <title><%= AppConst::APP_CAPTION %> ROBOT</title>

    <!-- FAVICON start -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">
    <!-- FAVICON end -->

    <link rel="stylesheet" href="/css/tachyons.min.css">
    <link rel="stylesheet" href="/css/sweetalert2.min.css">

    <style>
     div.robotBase {
       /* grid-template-areas: left left right right; */
       /*
           display: grid;
      grid-gap: 10px;
      grid-template-columns: repeat(4, [col] 350px ) ;
      grid-template-rows: repeat(2, [row] auto  );
      background-color: #fff;
      color: #444;
      */
     }
     div.robotLoginWidget {
       /*
       grid-area: loginWidget;
       */
     }
     div.robotStatsWidget {
       /*
       grid-area: statsWidget;
       */
     }
     div.robotLeft {
       /*
       width: 30em;
       grid-column: col / span 1;
      grid-row: row;
      */
       /* grid-area: left; */
     }
     div.robotRight {
       /*
       grid-column: col 2 / span 3;
      grid-row: row;
      */
       /* grid-area: right; */
     }




      .cbl-icon {
        display: inline-block;
        height: 1em;
        width: 1em;
        fill: currentColor;
        position: relative;
        top: .125em;
      }
      input:focus {
        border-bottom-color: darkcyan;
      }
      input:required {
        border-right: thick solid orange;
      }
      select:required {
        border-right: thick solid orange;
      }
      input.cbl-to-upper {
        text-transform: uppercase;
      }
      .disableClick{
        pointer-events: none;
      }
      .focusLabel {
        color: darkcyan;
      }
      .brown {
        color: #a52a2a;
      }
      table.rmd-table {
        border-collapse: collapse;
      }
      tr.hover-row:hover {
        background-color: #90EE90;
        color: #000000;
      }
      th {
        font-weight: normal;
      }
      th.rmd-table-cell {
        border: thin solid gray;
        font-weight: bold;
        color: #777;
      }
      td.rmd-table-cell {
        border: thin solid gray;
        color: #777;
        padding: 4px;
      }
      .crossbeams-warning-note {
        margin-top: 0.5em;
        padding: 0.2em;
        border: thin solid olive;
        color: white;
        background-color: #FFC107;
      }

      .crossbeams-error-note {
        margin-top: 0.5em;
        padding: 0.2em;
        border: thin solid brown;
        color: brown;
        background-color: #fee;
      }

      .crossbeams-success-note p, .crossbeams-info-note p, .crossbeams-warning-note p, .crossbeams-error-note p {
        margin: 0.2em;
      }

      .rmdScanFieldGRoup {
        display: flex;
      }
      /* Look at clipboard button in Layout for styling... */
      .rmdScanFieldGRoup input {
        flex: 1;
      }
      .rmdScanFieldGRoup button {
        color: #107FB7;
      }
      .rmdLeds {
        display: flex;
        justify-content: space-around;
      }

      .rmdLedLight {
        height: 2em;
        width: 6em;
        margin: 1em;
      }

      /* Animate the RMD WiFi icon when a form is submitted without internet connection: */
      .wifiWait {
        animation: pulse 2s infinite;
        -webkit-animation: pulse 2s infinite;
      }
      @keyframes pulse {
        0% {
          fill: #001F3F;
          transform: scale(0.3);
        }
        50% {
          fill: #FF4136;
        }
        100% {
          fill: #FF0000;
          transform: scale(1.5);
        }
      }
      @-webkit-keyframes pulse {
        0% {
          fill: #001F3F;
          transform: scale(0.3);
        }
        50% {
          fill: #FF4136;
        }
        100% {
          fill: #FF0000;
          transform: scale(1.5);
        }
      }

      /* ----------------------------------------- */
      /* --- START TOGGLE (CHECKBOX) COMPONENT --- */
      /* ----------------------------------------- */
      /* The switch - the box around the slider */
      .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
      }

      /* Hide default HTML checkbox */
      .switch input {
        opacity: 0;
        width: 0;
        height: 0;
      }

      /* The slider */
      .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
      }

      .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
      }

      input:checked + .slider {
        background-color: #357edd;
      }

      input:focus + .slider {
        box-shadow: 0 0 1px #357edd;
      }

      input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
      }

      /* Rounded sliders */
      .slider.round {
        border-radius: 34px;
      }

      .slider.round:before {
        border-radius: 50%;
      }
      /* --------------------------------------- */
      /* --- END TOGGLE (CHECKBOX) COMPONENT --- */
      /* --------------------------------------- */
    </style>
    <%= content_for :late_head %>
  </head>
  <body class="site" data-utf-8-ensurer="Ðž">
    <div id="rmd-offline-status" class="navy bg-washed-blue ba b--light-blue pa3 mw6 br3" style="display:none">
      <p class="ma0"><svg id="wifiIcon" class="w2 h2 mr2" width="2048" height="1792" viewBox="0 0 2048 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1024 1523q-20 0-93-73.5t-73-93.5q0-32 62.5-54t103.5-22 103.5 22 62.5 54q0 20-73 93.5t-93 73.5zm270-271q-2 0-40-25t-101.5-50-128.5-25-128.5 25-101 50-40.5 25q-18 0-93.5-75t-75.5-93q0-13 10-23 78-77 196-121t233-44 233 44 196 121q10 10 10 23 0 18-75.5 93t-93.5 75zm273-272q-11 0-23-8-136-105-252-154.5t-268-49.5q-85 0-170.5 22t-149 53-113.5 62-79 53-31 22q-17 0-92-75t-75-93q0-12 10-22 132-132 320-205t380-73 380 73 320 205q10 10 10 22 0 18-75 93t-92 75zm271-271q-11 0-22-9-179-157-371.5-236.5t-420.5-79.5-420.5 79.5-371.5 236.5q-11 9-22 9-17 0-92.5-75t-75.5-93q0-13 10-23 187-186 445-288t527-102 527 102 445 288q10 10 10 23 0 18-75.5 93t-92.5 75z"/></svg>
      <strong>Offline</strong><br><span id="offlineMsg">You are currently offline. Please check network settings and re-connect.</span></p>
    </div>
    <div id="container" class="container">
      <%= yield %>
    </div>
    <script src="/js/crossbeams-error.js"></script>
    <script src="/js/crossbeams-utils.js?seq=32"></script>
    <script src="/js/crossbeams-layout.js?seq=23"></script>
    <script src="/js/crossbeams-rmd_scan.js?seq=25" type="text/javascript"></script>
    <script src="/js/sweetalert2.min.js" type="text/javascript"></script>
    <script>
      // Polyfill for old robot browsers...
      if (window.NodeList && !NodeList.prototype.forEach) {
        NodeList.prototype.forEach = Array.prototype.forEach;
      }

      // Highlight label text for inputs that have focus.
      document.addEventListener('focus', function (event) {
        const prev = event.target.parentNode && event.target.parentNode.previousElementSibling;
        if (prev instanceof HTMLTableCellElement) { prev.classList.add('focusLabel'); }
      }, true);
      document.addEventListener('blur', function (event) {
        const prev = event.target.parentNode && event.target.parentNode.previousElementSibling;
        if (prev instanceof HTMLTableCellElement) { prev.classList.remove('focusLabel'); }
      }, true);

      window.addEventListener('DOMContentLoaded', function() {
        // Highlight label text for the input that gets autofocus.
        const afi = document.querySelector('input[autofocus]');
        const prev = afi && afi.parentNode && afi.parentNode.previousElementSibling;
        if (prev instanceof HTMLTableCellElement) { prev.classList.add('focusLabel'); }

        crossbeamsRmdScan.init(<%= AppConst::BARCODE_SCAN_RULES.to_json %>, <%= @bypass_rules ? true : false %>);
      });
    </script>
    <%= content_for :late_javascript %>
  </body>
</html>
